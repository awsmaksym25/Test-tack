{"remainingRequest":"H:\\Vladilen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\Vladilen\\src\\views\\ContactInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\Vladilen\\src\\views\\ContactInfo.vue","mtime":1600366576343},{"path":"H:\\Vladilen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Vladilen\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\Vladilen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Vladilen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: ['id'],\n    methods: {\n        attribute_add() {\n            this.updateCopy()\n\n            this.$store.commit('attribute_add', {\n                id: this.$route.params.id,\n                attribute: this.new_attribute,\n                attribute_value: this.new_attribute_value\n            })\n            this.new_attribute = \"\"\n            this.new_attribute_value = \"\"\n\n            this.attributeAdd = !this.attributeAdd\n        },\n        attribute_remove() {\n            if (confirm(`Confirm delete?`)) {\n                this.updateCopy()\n                return this.$store.commit('attribute_remove', {\n                    id: this.$route.params.id,\n                    attribute: event.target.getAttribute('data-id')\n                })\n\n            } else {\n                return false;\n            }\n        },\n        attribute_edit() {\n            this.updateCopy()\n            const id = this.$route.params.id\n            const data_id = event.target.getAttribute('data-id')\n\n            this.attributeEdit = !this.attributeEdit\n\n            this.editElement = data_id\n            this.new_edit_value = this.$store.state.allContacts[id][data_id]\n        },\n        apply_edit_attribute() {\n            const id = this.$route.params.id\n            const data_id = event.target.getAttribute('data-id')\n            if (confirm(`Confirm edit?`) && this.new_edit_value !== this.$store.state.allContacts[id][data_id]) {\n                console.log(1)\n                this.updateCopy()\n                this.$store.commit('attribute_edit', {\n                    id: this.$route.params.id,\n                    attribute: event.target.getAttribute('data-id'),\n                    newValue: this.new_edit_value\n                })\n            }\n                this.attributeEdit = !this.attributeEdit\n\n        },\n        attribute_Add() {\n            this.attributeAdd = !this.attributeAdd\n        },\n        updateCopy() {\n            this.$store.commit('update_copy', {\n                id: this.$route.params.id\n            })\n        },\n        backup() {\n            this.$store.commit('backup_contacts', {\n                id: this.$route.params.id\n            })\n        }\n    },\n    data() {\n        return {\n            attributeAdd: false,\n            attributeEdit: false,\n            editElement: \"\",\n            new_attribute: \"\",\n            new_attribute_value: \"\",\n            new_edit_value: \"\"\n        }\n    }\n}\n",{"version":3,"sources":["ContactInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactInfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <h1>Contacts aplication</h1>\n        <hr>\n        <router-link to=\"/\" tag=\"button\"\n        >Back</router-link>\n        <button v-on:click=\"backup()\"\n        >Undo</button>\n        <div>\n\n            <table>\n                <tr\n                        v-for=\"(el, index) in this.$store.state.allContacts[this.$route.params.id]\" :key=\"index\"\n                >\n                    <td>\n                    <span v-on:click=\"attribute_edit()\"\n                          v-if=\"!attributeEdit\"\n                          :data-id=\"index\"\n                    >Edit</span>\n                        <span v-on:click=\"apply_edit_attribute()\"\n                              v-if=\"attributeEdit && index == editElement\"\n                              :data-id=\"index\">\n                        Apply\n                    </span>\n                    </td>\n                    <td>\n                    <span v-on:click=\"attribute_remove()\"\n                          v-if=\"!attributeEdit\"\n                          :data-id=\"index\">\n                        Del\n                    </span>\n\n                    </td>\n                    <td>\n                        {{ index }}\n                    </td>\n                    <td v-if=\"!attributeEdit && index === editElement\">\n                        {{ el }}\n                    </td>\n                    <input v-if=\"attributeEdit && index == editElement\"\n                           v-model=\"new_edit_value\"\n                           :data-id=\"index\"\n                           style=\"width: 100px; height: 13px\" type=\"text\" placeholder=\"New value\">\n                    <td v-if=\"!attributeEdit && index !== editElement\">\n                        {{ el }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <span v-if=\"!attributeAdd\"\n                              v-on:click=\"attribute_Add()\"\n                        >Plus</span>\n                        <span   v-if=\"attributeAdd\"\n                                v-on:click=\"attribute_add(this)\"\n\n                        >\n                        Save </span>\n                    </td>\n                    <td></td>\n                    <td>\n                        <input  v-if=\"attributeAdd\"\n                                v-model=\"new_attribute\"\n                                type=\"text\" placeholder=\"Attribute...\"\n                                style=\"width: 75px\">\n                    </td>\n\n                    <td>\n\n                        <input  v-if=\"attributeAdd\"\n                                v-model=\"new_attribute_value\"\n                                type=\"text\" placeholder=\"Value...\"\n                                style=\"width: 150px\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: ['id'],\n        methods: {\n            attribute_add() {\n                this.updateCopy()\n\n                this.$store.commit('attribute_add', {\n                    id: this.$route.params.id,\n                    attribute: this.new_attribute,\n                    attribute_value: this.new_attribute_value\n                })\n                this.new_attribute = \"\"\n                this.new_attribute_value = \"\"\n\n                this.attributeAdd = !this.attributeAdd\n            },\n            attribute_remove() {\n                if (confirm(`Confirm delete?`)) {\n                    this.updateCopy()\n                    return this.$store.commit('attribute_remove', {\n                        id: this.$route.params.id,\n                        attribute: event.target.getAttribute('data-id')\n                    })\n\n                } else {\n                    return false;\n                }\n            },\n            attribute_edit() {\n                this.updateCopy()\n                const id = this.$route.params.id\n                const data_id = event.target.getAttribute('data-id')\n\n                this.attributeEdit = !this.attributeEdit\n\n                this.editElement = data_id\n                this.new_edit_value = this.$store.state.allContacts[id][data_id]\n            },\n            apply_edit_attribute() {\n                const id = this.$route.params.id\n                const data_id = event.target.getAttribute('data-id')\n                if (confirm(`Confirm edit?`) && this.new_edit_value !== this.$store.state.allContacts[id][data_id]) {\n                    console.log(1)\n                    this.updateCopy()\n                    this.$store.commit('attribute_edit', {\n                        id: this.$route.params.id,\n                        attribute: event.target.getAttribute('data-id'),\n                        newValue: this.new_edit_value\n                    })\n                }\n                    this.attributeEdit = !this.attributeEdit\n\n            },\n            attribute_Add() {\n                this.attributeAdd = !this.attributeAdd\n            },\n            updateCopy() {\n                this.$store.commit('update_copy', {\n                    id: this.$route.params.id\n                })\n            },\n            backup() {\n                this.$store.commit('backup_contacts', {\n                    id: this.$route.params.id\n                })\n            }\n        },\n        data() {\n            return {\n                attributeAdd: false,\n                attributeEdit: false,\n                editElement: \"\",\n                new_attribute: \"\",\n                new_attribute_value: \"\",\n                new_edit_value: \"\"\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    table {\n        display: inline-block;\n    }\n</style>\n"]}]}